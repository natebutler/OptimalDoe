// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// d_check
double d_check(NumericMatrix mat);
RcppExport SEXP _optimalDoe_d_check(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(d_check(mat));
    return rcpp_result_gen;
END_RCPP
}
// findMinDscore
NumericVector findMinDscore(ListOf<NumericMatrix> matrices, int order);
RcppExport SEXP _optimalDoe_findMinDscore(SEXP matricesSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ListOf<NumericMatrix> >::type matrices(matricesSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(findMinDscore(matrices, order));
    return rcpp_result_gen;
END_RCPP
}
// coordinate_exchange
List coordinate_exchange(int N, int K, int model_order);
RcppExport SEXP _optimalDoe_coordinate_exchange(SEXP NSEXP, SEXP KSEXP, SEXP model_orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type model_order(model_orderSEXP);
    rcpp_result_gen = Rcpp::wrap(coordinate_exchange(N, K, model_order));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_optimalDoe_d_check", (DL_FUNC) &_optimalDoe_d_check, 1},
    {"_optimalDoe_findMinDscore", (DL_FUNC) &_optimalDoe_findMinDscore, 2},
    {"_optimalDoe_coordinate_exchange", (DL_FUNC) &_optimalDoe_coordinate_exchange, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_optimalDoe(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
